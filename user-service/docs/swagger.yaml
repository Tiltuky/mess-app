basePath: /api/
definitions:
  models.LoginResponse:
    properties:
      code:
        type: integer
      expiredAt:
        type: integer
      token:
        type: string
    type: object
  models.Response:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.User:
    properties:
      avatarURL:
        type: string
      city:
        type: string
      createdAt:
        type: integer
      deletedAt:
        type: integer
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  models.UserProfile:
    properties:
      avatarURL:
        type: string
      city:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A users management service API in Go using Gin framework.
  title: dating-app user-service API
  version: "1.0"
paths:
  /users/:
    get:
      consumes:
      - application/json
      description: Получение списка всех пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserProfile'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получение списка всех пользователей
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление информации о пользователе по id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Удаление информации о пользователе
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Получение информации о пользователе по id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получение информации о пользователе
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Обновление информации о пользователе по id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Обновление информации о пользователе
      tags:
      - Users
  /users/{id}/avatar:
    post:
      consumes:
      - application/json
      description: Загрузка аватара по id
      parameters:
      - description: Avatar
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Загрузка аватара
      tags:
      - Users
  /users/{id}/profile:
    get:
      consumes:
      - application/json
      description: Получение профиля пользователя по id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Получение профиля пользователя
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Обновление профиля пользователя по id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Обновление профиля пользователя
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - multipart/form-data
      description: Вход в систему по почте и паролю
      parameters:
      - description: email
        in: query
        name: email
        required: true
        type: string
      - description: password
        in: query
        name: pass
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Аутентификация пользователя
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Добавление  пользователя в базу
      parameters:
      - description: Новый пользователь
        in: body
        name: Users
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Регистрация нового пользователя
      tags:
      - Users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
